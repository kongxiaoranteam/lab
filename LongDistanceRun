#include "motion.h"
#include "objectdetector.h"
#include <iostream>
#include <cstdlib>
#include <signal.h>

using namespace std;

void got_signal(int);

//int cnote=0;

int main(int argc, char ** argv)
{

    cout << "start " <<endl;

	//???????�????�??????????�???????????????????ot_signal????????????????�??????????�?	signal(SIGABRT, got_signal);
	signal(SIGTERM, got_signal);
	signal(SIGQUIT, got_signal);
	signal(SIGINT, got_signal);

	const int x_speed =10;
	const int speed_up_msec = 1000;

	//???????�???bjectDetector?�?????�?????????????�???�??????????????�????????????????????????????????????????????????
	ObjectDetector obj("test", ShowBinary | ShowSource | ShowDrawing);
	obj.adjust_color();
//

    cout << "read char" << endl;

	getchar();
	Motion::ins().head_move(0,10,0);
	//Motion::ins().walk_start();
	//??????????�??�????????�????�??????????�??�?????????????????????�???????????????????????????????�????�????�???????????????????????

	//Motion::ins().walk(x_speed, 0, speed_up_msec);
	int c = 0;
	while (c != 27) {
		//???????�?�?????????????????????????????�,???????????�????????????????????�

		c = obj.process_by_color(10);
    //if (!obj.empty()) {
			//?�???postion?????????????????????????�??????width?????????????????????????�??????????????????bjectdetector.h????�
			std::cout << "Postion: " << obj.postion() << " Width: " << obj.width() << std::endl;

			Motion::ins().walk(x_speed,-(800-obj.postion())/20);
		//}
		//?�?�??��????????????????????????????ue
		//if (cnote==0){getchar();cnote=1;}
		if (Motion::ins().fall_up()) {
			//????????�??????????????????????????????�??????????????��
			Motion::ins().walk_start();
			Motion::ins().walk(x_speed, 0, speed_up_msec);
		}
	}
	return 0;
}

void got_signal(int)
{
	exit(0);
}
